@model SanjivaniModalView.BankDetails
@using (Html.BeginForm("_partialSetBankDeatil", "Director", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="box box-danger" id="loading-example">
        <div class="box-header" style="cursor: move;background-color: #007bff;cursor: move;color: white;">
            <!-- tools box -->
            <div class="pull-right box-tools">

                @*<a class="btn btn-danger btn-sm" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse"><i class="fa fa-minus"></i></a>*@

            </div><!-- /. tools -->


            <h3 class="box-title">Bank Detail</h3>
        </div><!-- /.box-header -->
        <div class="box-body no-padding" style="background-color: whitesmoke;">
            <div class="row">
                <div class="form-group col-md-3">
                    <label for="exampleInputEmail1">CP Bank Name</label>
                    @Html.DropDownListFor(model => model.BankName1, new SelectList(ViewBag.bank, "Value", "Text"), "--Select Bank--", new { @class = "form-control", })
                    @*@Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Channel Partner Bank Name" } })*@
                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputEmail1">Account No</label>
                    @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "CP Account No.", onkeypress = "return fnAllowNumeric()" } })
                    @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">IFSC Code</label>
                    @Html.EditorFor(model => model.IFSCcode, new { htmlAttributes = new { @class = "form-control", @placeholder = "IFSC Code" } })
                    @Html.ValidationMessageFor(model => model.IFSCcode, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputEmail1">CP Payment Bank Card Name</label>
                    @Html.EditorFor(model => model.PaymentBankCardName, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       @placeholder = "CP Payment Bank Card Name",
                       onfocusout = "return validateAccHName(this);"
                   }
               })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">CP Last 4 digit Card Number</label>
                    @Html.EditorFor(model => model.cardnumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "CP Last 4 digit Card Number", onkeypress = "return fnAllowNumeric()" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Account Holder Name</label>
                    @Html.EditorFor(model => model.AccountHolderName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Account Holder Name", onfocusout = "return validateAccHName(this);" } })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputEmail1">Account Type</label>
                    @Html.DropDownListFor(model => model.AccountType, new SelectList(ViewBag.Accountype, "Value", "Text"), "--Select Account Type--", new { @class = "form-control", })
                </div>
                <div class="col-md-12">
                    <div class="col-md-3">
                        <a class="btn btn-danger" onclick="CPBankDtlEnableTrue()"><i class="fa fa-edit"></i> Edit</a>
                        <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div><!-- /.row - inside box -->
        </div><!-- /.box-body -->

    </div>
}
<script type="text/javascript">
    var cek = /^[a-zA-Z\ \']+$/;
    function validateAccHName(form) {
        debugger;
        var name = $('#AccountHolderName').val();
        if (name != '') {
            if (!cek.test(name)) {

                $('#AccountHolderName').focus();
                alert("Only Alphabetic");
                $('#AccountHolderName').val('');
                return false;
            }
            return true;
        }

    }

    var cek = /^[a-zA-Z\ \']+$/;
    function validateAccHName(form) {
        debugger;
        var name = $('#PaymentBankCardName').val();
        if (name != '') {
            if (!cek.test(name)) {

                $('#PaymentBankCardName').focus();
                alert("Only Alphabetic");
                $('#PaymentBankCardName').val('');
                return false;
            }
            return true;
        }

    }


    $(document).ready(function () {
        console.log("dd");
        $('#BankName1').prop('disabled', true);
        $('#AccountNumber').prop('disabled', true);
        $('#IFSCcode').prop('disabled', true);
        $('#AccountHolderName').prop('disabled', true);
        $('#AccountType').prop('disabled', true);
        $('#PaymentBankCardName').prop('disabled', true);
        $('#cardnumber').prop('disabled', true);



    });

    function CPBankDtlEnableTrue() {

        $('#BankName1').prop('disabled', false);
        $('#AccountNumber').prop('disabled', false);
        $('#IFSCcode').prop('disabled', false);
        $('#AccountHolderName').prop('disabled', false);
        $('#PaymentBankCardName').prop('disabled', false);
        $('#AccountType').prop('disabled', false);
        $('#cardnumber').prop('disabled', false);
    }
</script>
