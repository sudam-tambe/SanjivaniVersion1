@model SanjivaniModalView.CPCchannelPartnerModel

@using (Html.BeginForm("_PartialCPCRegister", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="box box-danger" id="loading-example">
        <div class="box-header" style="cursor: move;background-color: #007bff;cursor: move;color: white;">
            <!-- tools box -->
            <div class="pull-right box-tools">

            </div><!-- /. tools -->

            <h3 class="box-title">Personal Detail</h3>
        </div><!-- /.box-header -->
        <div class="box-body no-padding" style="background-color: whitesmoke;">
            <div class="row">
                <div class="form-group col-md-3">
                    @Html.HiddenFor(model => model.CustId)
                    <label for="exampleInputEmail1">CP Registration Date</label>
                    @Html.EditorFor(model => model.RegiDate, "{dd-MM-yyyy}", new { htmlAttributes = new { @class = "form-control", @type = "date", @required = "required", @value = System.DateTime.Now } })

                </div>
                @*<div class="form-group col-md-3">
                        <label for="exampleInputEmail1">Channel Partner Id</label>
                        @Html.EditorFor(model => model.CPId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Channel Partner Id" } })
                    </div>*@
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">User Id</label>
                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control", @placeholder = "User Id", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputEmail1">Password</label>
                    @Html.EditorFor(model => model.pwd, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", @required = "required", @type = "password", onfocusout = "CheckPassword()"} })
                    @Html.ValidationMessageFor(model => model.pwd, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Confirm Password</label>
                    @Html.EditorFor(model => model.Cpwd, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm Password", @required = "required", @type = "password", onfocusout = "CnfirmPassword()" } })
                    @Html.ValidationMessageFor(model => model.Cpwd, "", new { @class = "text-danger" })
                </div>
                
                <div class="form-group col-md-3">
                    <label for="exampleInputEmail1">CP Categeory</label>
                    @Html.DropDownListFor(model => model.CpCategory, new SelectList(ViewBag.BindCPCategory, "Value", "Text"), "--Select CPCategory--", new { @class = "form-control", })
                </div>
                    <div class="form-group col-md-3">
                        <label for="exampleInputPassword1">Mobile No</label>
                        @Html.EditorFor(model => model.mobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mobile No.", onblur = "IsMobileNumber()", onkeypress = "return fnAllowNumeric()" } })
                        @Html.ValidationMessageFor(model => model.mobileNo, "", new { @class = "text-danger" })
                    </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Alternate Mobile No</label>
                    @Html.EditorFor(model => model.AlterMobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Alternate Mobile No.", onblur = "IsMobileNumber()", onkeypress = "return fnAllowNumeric()" } })
                    @Html.ValidationMessageFor(model => model.AlterMobileNo, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Partner Name</label>
                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Partner Name.", onblur = "IsMobileNumber()" } })
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                </div>
                    <div class="form-group col-md-6">
                        <label for="exampleInputEmail1">Channel Partner</label>
                        @Html.DropDownListFor(model => model.CpCustomer, new SelectList(ViewBag.BindCPCustomer, "Value", "Text"), "--Select CPCustomer--", new { @class = "form-control", })
                    </div>

                    <div class="form-group col-md-3">
                        <label for="exampleInputPassword1">Channel Partner Email Id</label>
                        @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Channel Partner Email Id", onblur = "validateCaseSensitiveEmail();" } })
                        @*<input type="password" class="form-control" id="exampleInputPassword1" placeholder="Channel Partner Email Id">*@
                    </div>

                <div class="form-group col-md-3">
                    <label for="exampleInputPassword1">Posted Code</label>
                    @Html.EditorFor(model => model.PostedCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Posted Code", onkeypress = "return fnAllowNumeric()" } })
                </div>
                    <div class="form-group col-md-6">
                        <label for="exampleInputPassword1">Address</label>
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Address" } })
                        @*<input type="password" class="form-control" id="exampleInputPassword1" placeholder="Enter Address">*@
                    </div>
                    <div class="form-group col-md-3">
                        <label for="exampleInputEmail1">Country</label>
                        @Html.DropDownListFor(model => model.Country,
       Enumerable.Empty<SelectListItem>
           (),
           "Select Country",
           new { @class = "countries order-alpha dropdown form-control", @id = "countryId" })

                    </div>
                    <div class="form-group col-md-3">
                        <label for="exampleInputEmail1">State</label>
                        @Html.DropDownListFor(m => m.State,
               new SelectList(Enumerable.Empty<SelectListItem>
                   (), "StateId", "State"),
                   "Select State",
                   new { @class = "states order-alpha dropdown form-control", @id = "stateId" })
                    </div>
                    <div class="form-group col-md-3">
                        <label for="exampleInputEmail1">City</label>
                        @Html.DropDownListFor(m => m.City,
       new SelectList(Enumerable.Empty<SelectListItem>
           (), "StateId", "State"),
           "Select City",
           new { @class = "cities order-alpha dropdown form-control", @id = "cityId" })
                    </div>
                </div><!-- /.row - inside box -->
        </div><!-- /.box-body -->

    </div>
    <div class="col-md-12">
        <div class="col-md-3">
            <a class="btn btn-danger" onclick="CPPersonalEnableTrue()" style="color:white"><i class="fa fa-edit"></i> Edit</a>
            <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
        </div>
        <div class="col-md-3"></div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")
<script src="~/Content/js/jquery.min.js"></script>
<script src="~/Content/js/countrystatecity.js"></script>
<script src="~/Content/js/bootstrap.min.js"></script>
@if (Session["Msg"] != "")
{
    <script type="text/javascript">
        debugger
        alert("Save Succesfull");

    </script>

}
<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        var userId = $('#CustId').val();
        var data = { CustId: userId };
        var data = getJsonResult("@Url.Action("getuserdat", "Partner")", data);
        var country = data.Country;
        $("#countryId").val(data.Country);

        $('#countryId').trigger("change");
        $('#countryId').prop('disabled', false);
        $("#stateId").val(data.StateId);
        $("#stateId").trigger("change");
        $("#cityId").val(data.City);
        $("#Address2").val(data.Address2);
        $("#EmailId2").val(data.EmailId2);
        $("#MobileNo2").val(data.MobileNo2);

    });

    $(document).ready(function () {
        console.log("dd");
        $('#CPId').prop('disabled', true);
        $('#UserName').prop('disabled', true);
        $('#mobileNo').prop('disabled', true);
        $('#CustomerName').prop('disabled', true);
        $('#EmailID').prop('disabled', true);
        $('#Address').prop('disabled', true);
        $('#PostedCode').prop('disabled', true);
        $('#UserId').prop('disabled', true);
        $('#AlterMobileNo').prop('disabled', true);
        $('#CpCustomer').prop('disabled', true);
        $('#RegiDate').prop('disabled', true);
        $('#pwd').prop('disabled', true);
        $('#Cpwd').prop('disabled', true);
        $('#CpCategory').prop('disabled', true);
      

        $('#countryId').prop('disabled', true);
        $('#stateId').prop('disabled', true);
        $('#cityId').prop('disabled', true);
      //$("#purchaselimit :input").prop("disabled", true);

    });
   
    function CPPersonalEnableTrue() {

        $('#CPId').prop('disabled', false);
        $('#UserName').prop('disabled', false);
        $('#mobileNo').prop('disabled', false);
        $('#CustomerName').prop('disabled', false);
        $('#EmailID').prop('disabled', false);
        $('#Address').prop('disabled', false);
        $('#PostedCode').prop('disabled', false);
        $('#RegiDate').prop('disabled', false);
        $('#pwd').prop('disabled', false);
        $('#Cpwd').prop('disabled', false);
        $('#CpCategory').prop('disabled', false);
        $('#UserId').prop('disabled', false);
        $('#AlterMobileNo').prop('disabled', false);
        $('#CpCustomer').prop('disabled', false);
        $('#countryId').prop('disabled', false);
        $('#stateId').prop('disabled', false);
        $('#cityId').prop('disabled', false);
    }
</script>