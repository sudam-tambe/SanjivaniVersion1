@model SanjivaniModalView.ChennelpartnerModel

@{
    ViewBag.Title = "NewCP";
    Layout = "~/Views/Shared/_LayoutSanjivani.cshtml";
}



<section class="content-header">
    <h1>
        Channal Partner
        <small>Control panel</small>
    </h1>
    <section class="content">
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))

        {
            @Html.AntiForgeryToken()

            <div class="col-lg-12">
                <section class="col-lg-12 connectedSortable ui-sortable">
                    <!-- Box (with bar chart) -->
                    <div class="box box-danger" id="loading-example">
                        <div class="box-header" style="cursor: move;background-color: steelblue;cursor: move;color: white;">
                            <!-- tools box -->
                            <div class="pull-right box-tools">

                                @*<a class="btn btn-danger btn-sm" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse"><i class="fa fa-minus"></i></a>*@

                            </div><!-- /. tools -->
                            <i class="fa fa-user"></i>

                            <h3 class="box-title">Personal Detail</h3>
                        </div><!-- /.box-header -->
                        <div class="box-body no-padding" style="background-color: whitesmoke;">
                            <div class="row">
                                <div class="form-group col-md-3">
                                    @Html.HiddenFor(model => model.CustId)
                                    <label for="exampleInputEmail1">CP Registration Date</label>
                                    @Html.EditorFor(model => model.RegiDate, "{dd-MM-yyyy}", new { htmlAttributes = new { @class = "form-control", @type = "date", @required = "required", @value = System.DateTime.Now } })

                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputEmail1">Channel Partner Id</label>
                                    @Html.EditorFor(model => model.CPId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Channel Partner Id" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">User Id</label>
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "User Id" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputEmail1">Password</label>
                                    @Html.EditorFor(model => model.pwd, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", onfocusout = "password()" } })
                                    @Html.ValidationMessageFor(model => model.pwd, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Confirm Password</label>
                                    @Html.EditorFor(model => model.Cpwd, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm Password", onfocusout = "CnfirmPassword()" } })
                                    @Html.ValidationMessageFor(model => model.Cpwd, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Mobile No</label>
                                    @Html.EditorFor(model => model.mobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mobile No.", onblur = "IsMobileNumber()" } })
                                    @Html.ValidationMessageFor(model => model.mobileNo, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputEmail1">Channel Partner Name</label>
                                    @Html.EditorFor(model => model.chennelpartName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Channel Partner Name" } })
                                    @Html.ValidationMessageFor(model => model.chennelpartName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Channel Partner Email Id</label>
                                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control", @placeholder = "Channel Partner Email Id", onblur = "validateCaseSensitiveEmail();" } })
                                    @*<input type="password" class="form-control" id="exampleInputPassword1" placeholder="Channel Partner Email Id">*@
                                </div>

                                <div class="form-group col-md-3">
                                    <label for="exampleInputEmail1">CP Categeory</label>
                                    @Html.DropDownListFor(model => model.CpCategory, new SelectList(ViewBag.BindCPCategory, "Value", "Text"), "--Select CPCategory--", new { @class = "form-control", })
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputPassword1">Address</label>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Address" } })
                                    @*<input type="password" class="form-control" id="exampleInputPassword1" placeholder="Enter Address">*@
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputEmail1">State</label>
                                    @Html.DropDownListFor(model => model.State, new SelectList(ViewBag.StateList, "Value", "Text"), "--Select State--", new { @class = "form-control", })
                                </div>


                            </div><!-- /.row - inside box -->
                        </div><!-- /.box-body -->

                    </div><!-- /.box -->
                    <!-- Custom tabs (Charts with tabs)-->
                    <!-- /.nav-tabs-custom -->
                    <!-- Calendar -->
                    <!-- /.box -->
                    <!-- quick email widget -->


                </section>
                <section class="col-lg-12 connectedSortable ui-sortable">
                    <!-- Box (with bar chart) -->
                    <div class="box box-danger" id="loading-example">
                        <div class="box-header" style="cursor: move;background-color: steelblue;cursor: move;color: white;">
                            <!-- tools box -->
                            <div class="pull-right box-tools">

                                @*<button class="btn btn-danger btn-sm" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse"><i class="fa fa-minus"></i></button>*@

                            </div><!-- /. tools -->
                            <i class="fa fa-calendar"></i>

                            <h3 class="box-title">Business Detail</h3>
                        </div><!-- /.box-header -->
                        <div class="box-body no-padding" style="background-color: whitesmoke;">
                            <div class="row">
                                <div class="form-group col-md-3">
                                    <label for="exampleInputEmail1">Company Name</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.CommanyName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Company Name" } })
                                    @Html.ValidationMessageFor(model => model.ObjBusinessDetails.CommanyName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Company Type</label>
                                    @Html.DropDownListFor(model => model.ObjBusinessDetails.CommanyType, new SelectList(ViewBag.BindCompanyType, "Value", "Text"), "--Select Commany Type--", new { @class = "form-control", })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Company Reg. Number</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.RegNumber, new { htmlAttributes = new { @class = "form-control", } })
                                    @Html.ValidationMessageFor(model => model.ObjBusinessDetails.RegNumber, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Company GST Reg Number</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.GSTRegNumber, new { htmlAttributes = new { @class = "form-control", } })
                                    @Html.ValidationMessageFor(model => model.ObjBusinessDetails.GSTRegNumber, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Company WebSite</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.webSite, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Company WebSite" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Line Of Business</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.LineofBusiness, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Line Of Business" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Annual Turnover</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.Annulturnoveer, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Annual Turnover" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Contact Person Name </label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.webSite, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Contact Person Name" } })
                                </div>

                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Designation</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.Designation, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Designation" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Contact Number</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.BContactnumber, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Contact Number" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Alternate Contact Number</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.ABContactnumber, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Alternate Contact Number" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Email Id </label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.Emailid, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Email Id" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Current ERP</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.ERP, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Current ERP" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Current Hosting Provider</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.HostingProvider, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Current Hosting Provider" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Hosting Platfrom</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.HostingPlatform, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Hosting Platfrom" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Type of Hosting</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.TypeofHosting, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Type of Hosting" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">No.of WebSite Hosted</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.NoOfWebSiteHos, new { htmlAttributes = new { @class = "form-control", @Placeholder = "No.of WebSite Hosted" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Current Email Provider</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.CurrentEmailProvider, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Current Email Provider" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Count Of Emails</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.CountofEmail, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Count Of Emails" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Current Domain Provider</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.CurrentDomainProvide, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Current Domain Provider" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Count Of Domains</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.CurrentDomainCount, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Count Of Domains" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">Count Of SSL Certificate</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.SSLCertificateCount, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Count Of SSL Certificate" } })
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputPassword1">Office Address</label>
                                    @Html.EditorFor(model => model.ObjBusinessDetails.OfficeAddres, new { htmlAttributes = new { @class = "form-control", @Placeholder = "Office Address" } })
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="exampleInputPassword1">State</label>
                                    @Html.DropDownListFor(model => model.State, new SelectList(ViewBag.StateList, "Value", "Text"), "--Select State--", new { @class = "form-control", })
                                </div>
                            </div><!-- /.row - inside box -->
                        </div><!-- /.box-body -->

                    </div><!-- /.box -->
                    <!-- Custom tabs (Charts with tabs)-->
                    <!-- /.nav-tabs-custom -->
                    <!-- Calendar -->
                    <!-- /.box -->
                    <!-- quick email widget -->


                </section>

            </div>
            <div class="col-lg-12">

                <section class="col-lg-6 connectedSortable ui-sortable">
                    <!-- Box (with bar chart) -->
                    <div class="box box-danger" id="loading-example">
                        <div class="box-header" style="cursor: move;background-color: steelblue;cursor: move;color: white;">
                            <!-- tools box -->
                            <div class="pull-right box-tools">


                            </div><!-- /. tools -->
                            <i class="fa fa-home"></i>

                            <h3 class="box-title">Bank Detail</h3>
                        </div><!-- /.box-header -->
                        <div class="box-body no-padding" style="background-color: whitesmoke;">
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="exampleInputEmail1">Channel Partner Bank Name</label>
                                    @Html.EditorFor(model => model.ObjBackDetails.BankName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Channel Partner Bank Name" } })
                                    @Html.ValidationMessageFor(model => model.ObjBackDetails.BankName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputEmail1">Account No</label>
                                    @Html.EditorFor(model => model.ObjBackDetails.AccountNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Channel Partner Account No." } })
                                    @Html.ValidationMessageFor(model => model.ObjBackDetails.AccountNumber, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputPassword1">IFSC Code</label>
                                    @Html.EditorFor(model => model.ObjBackDetails.IFSCcode, new { htmlAttributes = new { @class = "form-control", @placeholder = "IFSC Code" } })
                                    @Html.ValidationMessageFor(model => model.ObjBackDetails.IFSCcode, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputEmail1">CP Payment Bank Card Name</label>
                                    @Html.EditorFor(model => model.ObjBackDetails.PaymentBankCardName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Channel Partner Payment Bank Card Name" } })
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputPassword1">CP Last 4 digit Card Number</label>
                                    @Html.EditorFor(model => model.ObjBackDetails.cardnumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Channel Partner Last 4 digit Card Number" } })
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputPassword1">Channel Partner Payment Mode</label>
                                    @Html.DropDownListFor(model => model.ObjBackDetails.paymentMode, new SelectList(ViewBag.PaymentMode, "Value", "Text"), "--Select Payment Mode--", new { @class = "form-control", })
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputEmail1">Account Type</label>
                                    @Html.DropDownListFor(model => model.ObjBackDetails.AccountType, new SelectList(ViewBag.Accountype, "Value", "Text"), "--Select Account Type--", new { @class = "form-control", })
                                </div>
                            </div><!-- /.row - inside box -->
                        </div><!-- /.box-body -->

                    </div><!-- /.box -->
                    <!-- Custom tabs (Charts with tabs)-->
                    <!-- /.nav-tabs-custom -->
                    <!-- Calendar -->
                    <!-- /.box -->
                    <!-- quick email widget -->


                </section>

                <section class="col-lg-6 connectedSortable ui-sortable">
                    <!-- Box (with bar chart) -->
                    <div class="box box-danger" id="loading-example">
                        <div class="box-header" style="cursor: move;background-color: steelblue;cursor: move;color: white;">
                            <!-- tools box -->
                            <div class="pull-right box-tools">

                                @*<button class="btn btn-danger btn-sm" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse"><i class="fa fa-minus"></i></button>*@

                            </div><!-- /. tools -->
                            <i class="fa fa-file"></i>

                            <h3 class="box-title">Document Detail</h3>
                        </div><!-- /.box-header -->
                        <div class="box-body no-padding" style="background-color: whitesmoke;">
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="exampleInputFile">Upload Company Logo</label>
                                    <input type="file" name="postedFile" class="form-control"  />
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputFile">Upload Company PAN Card</label>

                                    <input type="file" name="postedFile" class="form-control" />
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputFile">Upload Company Reg Document</label>

                                    <input type="file" name="postedFile" class="form-control" />
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputFile">Upload Account Profile Photo</label>

                                    <input type="file" name="postedFile" class="form-control" />
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="exampleInputFile">Upload Company Owner Signature</label>

                                    <input type="file" name="postedFile" class="form-control" />
                                </div>

                            </div><!-- /.row - inside box -->
                        </div><!-- /.box-body -->

                    </div><!-- /.box -->
                    <!-- Custom tabs (Charts with tabs)-->
                    <!-- /.nav-tabs-custom -->
                    <!-- Calendar -->
                    <!-- /.box -->
                    <!-- quick email widget -->


                </section>
            </div>
            <div class="box-body">

                <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>


            </div>
        }
    </section>

</section>




<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
<script type="text/javascript">

    function IsMobileNumber() {
        var mob = /^[1-9]{1}[0-9]{9}$/;
        var txtMobile = document.getElementById("mobileNo").value;
        if (txtMobile != '') {
            if (mob.test(txtMobile) == false) {
                alert("Please enter valid mobile number.");
                $("#mobileNo").val('');
                return false;
            }
            return true;
        }

    }
    function CnfirmPassword() {

        var pass = document.getElementById("pwd").value;
        var Confpass = document.getElementById("Cpwd").value;
        if (Confpass != '') {
            if (Confpass != pass) {
                alert("Confirm Password Does Not Match");
                $("#Cpwd").val('');

                return false;
            }
            return true;
        }

    }
    function validateCaseSensitiveEmail() {
        var email = document.getElementById("EmailID").value;


        var reg = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        if (reg.test(email)) {

        }
        else {
            alert("Please Enter Valid Email");
            $("#EmailID").val('');

        }
    }
    function password() {
        var res;
        var str =
            document.getElementById("pwd").value;
        if (str.match(/[a-z]/g) && str.match(
                /[A-Z]/g) && str.match(
                /[0-9]/g) && str.match(
                /[^a-zA-Z\d]/g) && str.length >= 8)
            res = "TRUE";
        else
        {
            res = "FALSE";
            alert("Password Should be Strong");
            $("#pwd").val('');
        }
            
        document.getElementById("t2").value = res;

    }

    $("#MobileNo").change(function () {
        var MobileMo = $("#MobileNo").val();
        $.ajax({
            type: "GET",
            url: "/Home/GetCutomerFromMobile",
            contentType: "application/json; charset=utf-8",
            data: 'MobileMo=' + MobileMo,
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    $('#CustName').val(response.Name);

                } else {
                    alert("Something went wrong");
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    });
</script>